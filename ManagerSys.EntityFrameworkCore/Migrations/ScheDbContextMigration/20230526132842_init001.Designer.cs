// <auto-generated />
using System;
using ManagerSys.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace ManagerSys.EntityFrameworkCore.Migrations.ScheDbContextMigration
{
    [DbContext(typeof(ScheDbContext))]
    [Migration("20230526132842_init001")]
    partial class init001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleDelayedEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("ContentKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ContentKey");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<DateTime>("DelayAbsoluteTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DelayAbsoluteTime");

                    b.Property<int>("DelayTimeSpan")
                        .HasColumnType("int")
                        .HasColumnName("DelayTimeSpan");

                    b.Property<DateTime?>("ExecuteTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExecuteTime");

                    b.Property<int>("FailedRetrys")
                        .HasColumnType("int")
                        .HasColumnName("FailedRetrys");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("FinishTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("NotifyBody")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NotifyBody");

                    b.Property<string>("NotifyDataType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NotifyDataType");

                    b.Property<string>("NotifyUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NotifyUrl");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Remark");

                    b.Property<string>("SourceApp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SourceApp");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Topic");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("Id");

                    b.ToTable("ScheduleDelayeds");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("AssemblyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("AssemblyName");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<string>("CronExpression")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CronExpression");

                    b.Property<string>("CustomParamsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CustomParamsJson");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("GroupName");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastRunTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastRunTime");

                    b.Property<int>("MetaType")
                        .HasColumnType("int")
                        .HasColumnName("MetaType");

                    b.Property<DateTime?>("NextRunTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("NextRunTime");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Remark");

                    b.Property<bool>("RunLoop")
                        .HasColumnType("bit")
                        .HasColumnName("RunLoop");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Title");

                    b.Property<int>("TotalRunCount")
                        .HasColumnType("int")
                        .HasColumnName("TotalRunCount");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleExecutorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("WorkerName");

                    b.HasKey("Id");

                    b.ToTable("ScheduleExecutors");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleHttpOptionEntity", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ContentType");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<string>("Headers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Headers");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Method");

                    b.Property<string>("RequestUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("RequestUrl");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("ScheduleId");

                    b.ToTable("ScheduleHttpOptions");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleKeeperEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("ScheduleKeepers");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleLockEntity", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("LockedNode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("LockedNode");

                    b.Property<DateTime?>("LockedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LockedTime");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("ScheduleId");

                    b.ToTable("ScheduleLocks");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleReferenceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ChildId");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("Id");

                    b.ToTable("ScheduleReferences");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ScheduleTraceEntity", b =>
                {
                    b.Property<Guid>("TraceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TraceId");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<double>("ElapsedTime")
                        .HasColumnType("float")
                        .HasColumnName("ElapsedTime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndTime");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Node")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Node");

                    b.Property<int>("Result")
                        .HasColumnType("int")
                        .HasColumnName("Result");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartTime");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("TraceId");

                    b.ToTable("ScheduleTraces");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.ServerNodeEntity", b =>
                {
                    b.Property<Guid>("NodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NodeId");

                    b.Property<string>("AccessProtocol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AccessProtocol");

                    b.Property<string>("AccessSecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AccessSecret");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Host");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MachineName");

                    b.Property<int>("MaxConcurrency")
                        .HasColumnType("int")
                        .HasColumnName("MaxConcurrency");

                    b.Property<string>("NodeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NodeName");

                    b.Property<string>("NodeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NodeType");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("Priority");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("NodeId");

                    b.ToTable("ServerNodes");
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.SystemConfigEntity", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("key");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Group");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsReuired")
                        .HasColumnType("bit")
                        .HasColumnName("IsReuired");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Remark");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasColumnName("Sort");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Value");

                    b.HasKey("Key");

                    b.ToTable("SystemConfigs");

                    b.HasData(
                        new
                        {
                            Key = "Email_SmtpServer",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(734),
                            Group = "邮件配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "邮件服务器",
                            Remark = "smtp服务器地址",
                            Sort = 1,
                            Value = ""
                        },
                        new
                        {
                            Key = "Email_SmtpPort",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(746),
                            Group = "邮件配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "邮件服务器端口",
                            Remark = "smtp端口号",
                            Sort = 2,
                            Value = ""
                        },
                        new
                        {
                            Key = "Email_FromAccount",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(748),
                            Group = "邮件配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "发件人账号",
                            Remark = "邮箱账号",
                            Sort = 3,
                            Value = ""
                        },
                        new
                        {
                            Key = "Email_FromAccountPwd",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(749),
                            Group = "邮件配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "发件人账号密码",
                            Remark = "登录密码或授权码等",
                            Sort = 4,
                            Value = ""
                        },
                        new
                        {
                            Key = "Assembly_ImagePullPolicy",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(751),
                            Group = "程序集配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "文件包拉取策略",
                            Remark = "Always-总是拉取，IfNotPresent-本地没有时拉取，默认是Always",
                            Sort = 1,
                            Value = "Always"
                        },
                        new
                        {
                            Key = "Http_RequestTimeout",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(753),
                            Group = "HTTP配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "请求超时时间",
                            Remark = "单位是秒，默认值是10",
                            Sort = 1,
                            Value = "10"
                        },
                        new
                        {
                            Key = "System_WorkerUnHealthTimes",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(774),
                            Group = "系统配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "Worker允许无响应次数",
                            Remark = "健康检查失败达到最大次数会被下线剔除，默认值是3",
                            Sort = 1,
                            Value = "3"
                        },
                        new
                        {
                            Key = "DelayTask_DelayPattern",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(776),
                            Group = "延时任务配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "延迟模式",
                            Remark = "Relative-相对时间，Absolute-绝对时间，默认值是Relative",
                            Sort = 1,
                            Value = "Relative"
                        },
                        new
                        {
                            Key = "DelayTask_RetryTimes",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(777),
                            Group = "延时任务配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "回调失败重试次数",
                            Remark = "回调失败重试次数，默认值是3",
                            Sort = 2,
                            Value = "3"
                        },
                        new
                        {
                            Key = "DelayTask_RetrySpans",
                            CreateTime = new DateTime(2023, 5, 26, 21, 28, 42, 343, DateTimeKind.Local).AddTicks(780),
                            Group = "延时任务配置",
                            IsDeleted = false,
                            IsReuired = true,
                            Name = "回调失败重试间隔",
                            Remark = "回调失败重试间隔时间(s)，会随着重试次数递增，默认值是10秒",
                            Sort = 3,
                            Value = "10"
                        });
                });

            modelBuilder.Entity("ManagerSys.Domian.Schedule.TraceStatisticsEntity", b =>
                {
                    b.Property<int>("DateNum")
                        .HasColumnType("int")
                        .HasColumnName("DateNum");

                    b.Property<DateTime?>("CreateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("CreateTime");

                    b.Property<string>("CreateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUser");

                    b.Property<string>("CreateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreateUserCode");

                    b.Property<long>("DateStamp")
                        .HasColumnType("bigint")
                        .HasColumnName("DateStamp");

                    b.Property<int>("Fail")
                        .HasColumnType("int")
                        .HasColumnName("Fail");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("Other")
                        .HasColumnType("int")
                        .HasColumnName("Other");

                    b.Property<int>("Success")
                        .HasColumnType("int")
                        .HasColumnName("Success");

                    b.Property<DateTime?>("UpdateTime")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateTime");

                    b.Property<string>("UpdateUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUser");

                    b.Property<string>("UpdateUserCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("UpdateUserCode");

                    b.HasKey("DateNum");

                    b.ToTable("TraceStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
